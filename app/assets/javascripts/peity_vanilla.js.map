{"version":3,"sources":["webpack://piety_vanilla/webpack/universalModuleDefinition","webpack://piety_vanilla/./src/index.js"],"names":["root","factory","exports","module","define","amd","i","a","self","peity","element","type","options","chart","svgSupported","$this","dataset","Peity","Object","assign","defaults","JSON","parse","addEventListener","draw","$el","opts","this","PeityPrototype","prototype","svgElement","tag","attrs","attr","document","createElementNS","setAttribute","createSVGRect","graphers","call","after","isFunction","o","apply","fill","_","length","prepare","width","height","$svg","style","display","innerHTML","values","innerText","split","delimiter","map","value","parseFloat","register","grapher","radius","match","n","v1","v2","Math","max","sum","diameter","clientWidth","clientHeight","cx","cy","min","innerRadius","pi","PI","scale","radians","cos","sin","cumulative","cumulativePlusValue","d","portion","$node","y1","x2","y2","join","r","concat","push","append","pie","padding","undefined","diff","xScale","x","input","yScale","y","h","w","valueY","stroke","strokeWidth","zero","coords","points","slice","window"],"mappings":"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","file":"peity_vanilla.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = factory();\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, () => {\nreturn ","\"use strict\";\r\n\r\nvar peity = function(element, type, options) {\r\n  if (svgSupported) {\r\n    var $this = element\r\n    var chart = $this.dataset['_peity']\r\n\r\n    chart = new Peity(\r\n      $this,\r\n      type,\r\n      Object.assign({},\r\n        peity.defaults[type],\r\n        JSON.parse($this.dataset['peity'] || '{}'),\r\n        options)\r\n    )\r\n\r\n    $this.addEventListener(\"change\", function() { chart.draw() })\r\n    $this.dataset['_peity'] = chart\r\n\r\n    chart.draw()\r\n    return $this;\r\n  }\r\n};\r\n\r\nvar Peity = function($el, type, opts) {\r\n  this.$el = $el\r\n  this.type = type\r\n  this.opts = opts\r\n}\r\n\r\nvar PeityPrototype = Peity.prototype\r\n\r\nvar svgElement = PeityPrototype.svgElement = function(tag, attrs) {\r\n  var element = document.createElementNS('http://www.w3.org/2000/svg', tag)\r\n  for(var attr in attrs) {\r\n    element.setAttribute(attr, attrs[attr])\r\n  }\r\n  return element;\r\n}\r\n\r\n// https://gist.github.com/madrobby/3201472\r\nvar svgSupported = 'createElementNS' in document && svgElement('svg', {}).createSVGRect()\r\n\r\nPeityPrototype.draw = function() {\r\n  var opts = this.opts\r\n  peity.graphers[this.type].call(this, opts)\r\n  if (opts.after) opts.after.call(this, opts)\r\n}\r\n\r\nPeityPrototype.isFunction = function(o) { return null !== o && \"function\" === typeof o && !!o.apply; }\r\n\r\nPeityPrototype.fill = function() {\r\n  var fill = this.opts.fill\r\n\r\n  return PeityPrototype.isFunction(fill)\r\n    ? fill\r\n    : function(_, i) { return fill[i % fill.length] }\r\n}\r\n\r\nPeityPrototype.prepare = function(width, height) {\r\n  if (!this.$svg) {\r\n    this.$el.style.display = 'none'\r\n    this.$el.after(\r\n      this.$svg = svgElement('svg', {\r\n        \"class\": \"peity\"\r\n      })\r\n    )\r\n  }\r\n\r\n  this.$svg.innerHTML = \"\";\r\n  this.$svg.setAttribute(\"width\", width)\r\n  this.$svg.setAttribute(\"height\", height)\r\n\r\n  return this.$svg;\r\n}\r\n\r\nPeityPrototype.values = function() {\r\n  return this.$el.innerText.split(this.opts.delimiter).map(function(value) {\r\n    return parseFloat(value)\r\n  })\r\n}\r\n\r\npeity.defaults = {}\r\npeity.graphers = {}\r\n\r\npeity.register = function(type, defaults, grapher) {\r\n  this.defaults[type] = defaults\r\n  this.graphers[type] = grapher\r\n}\r\n\r\npeity.register(\r\n  'pie',\r\n  {\r\n    fill: ['#ff9900', '#fff4dd', '#ffc66e'],\r\n    radius: 8\r\n  },\r\n  function(opts) {\r\n    if (!opts.delimiter) {\r\n      var delimiter = this.$el.innerText.match(/[^0-9\\.]/)\r\n      opts.delimiter = delimiter ? delimiter[0] : \",\"\r\n    }\r\n\r\n    var values = this.values().map(function(n) {\r\n      return n > 0 ? n : 0\r\n    });\r\n\r\n    if (opts.delimiter == \"/\") {\r\n      var v1 = values[0]\r\n      var v2 = values[1]\r\n      values = [v1, Math.max(0, v2 - v1)]\r\n    }\r\n\r\n    var i = 0\r\n    var length = values.length\r\n    var sum = 0\r\n\r\n    for (; i < length; i++) {\r\n      sum += values[i]\r\n    }\r\n\r\n    if (!sum) {\r\n      length = 2\r\n      sum = 1\r\n      values = [0, 1]\r\n    }\r\n\r\n    var diameter = opts.radius * 2\r\n\r\n    var $svg = this.prepare(\r\n      opts.width || diameter,\r\n      opts.height || diameter\r\n    )\r\n\r\n    var width = $svg.clientWidth\r\n      , height = $svg.clientHeight\r\n      , cx = width / 2\r\n      , cy = height / 2\r\n\r\n    var radius = Math.min(cx, cy)\r\n      , innerRadius = opts.innerRadius\r\n\r\n    if (this.type == 'donut' && !innerRadius) {\r\n      innerRadius = radius * 0.5\r\n    }\r\n\r\n    var pi = Math.PI\r\n    var fill = this.fill()\r\n\r\n    var scale = this.scale = function(value, radius) {\r\n      var radians = value / sum * pi * 2 - pi / 2\r\n\r\n      return [\r\n        radius * Math.cos(radians) + cx,\r\n        radius * Math.sin(radians) + cy\r\n      ]\r\n    }\r\n\r\n    var cumulative = 0\r\n\r\n    for (i = 0; i < length; i++) {\r\n      var value = values[i]\r\n        , portion = value / sum\r\n        , $node\r\n\r\n      if (portion == 0) continue\r\n\r\n      if (portion == 1) {\r\n        if (innerRadius) {\r\n          var x2 = cx - 0.01\r\n            , y1 = cy - radius\r\n            , y2 = cy - innerRadius\r\n\r\n          $node = svgElement('path', {\r\n            d: [\r\n              'M', cx, y1,\r\n              'A', radius, radius, 0, 1, 1, x2, y1,\r\n              'L', x2, y2,\r\n              'A', innerRadius, innerRadius, 0, 1, 0, cx, y2\r\n            ].join(' '),\r\n            'data-value': value,\r\n          })\r\n        } else {\r\n          $node = svgElement('circle', {\r\n            cx: cx,\r\n            cy: cy,\r\n            'data-value': value,\r\n            r: radius\r\n          })\r\n        }\r\n      } else {\r\n        var cumulativePlusValue = cumulative + value\r\n\r\n        var d = ['M'].concat(\r\n          scale(cumulative, radius),\r\n          'A', radius, radius, 0, portion > 0.5 ? 1 : 0, 1,\r\n          scale(cumulativePlusValue, radius),\r\n          'L'\r\n        )\r\n\r\n        if (innerRadius) {\r\n          d = d.concat(\r\n            scale(cumulativePlusValue, innerRadius),\r\n            'A', innerRadius, innerRadius, 0, portion > 0.5 ? 1 : 0, 0,\r\n            scale(cumulative, innerRadius)\r\n          )\r\n        } else {\r\n          d.push(cx, cy)\r\n        }\r\n\r\n        cumulative += value\r\n\r\n        $node = svgElement('path', {\r\n          d: d.join(\" \"),\r\n          'data-value': value,\r\n        })\r\n      }\r\n\r\n      $node.setAttribute('fill', fill.call(this, value, i, values))\r\n\r\n      $svg.append($node)\r\n    }\r\n  }\r\n)\r\n\r\npeity.register(\r\n  'donut',\r\n  Object.assign(true, {}, peity.defaults.pie),\r\n  function(opts) {\r\n    peity.graphers.pie.call(this, opts)\r\n  }\r\n)\r\n\r\npeity.register(\r\n  'bar',\r\n  {\r\n    delimiter: \",\",\r\n    fill: [\"#4D89F9\"],\r\n    height: 16,\r\n    min: 0,\r\n    padding: 0.1,\r\n    width: 32\r\n  },\r\n  function(opts) {\r\n    var values = this.values()\r\n      , max = Math.max.apply(Math, opts.max == undefined ? values : values.concat(opts.max))\r\n      , min = Math.min.apply(Math, opts.min == undefined ? values : values.concat(opts.min))\r\n\r\n    var $svg = this.prepare(opts.width, opts.height)\r\n      , width = $svg.clientWidth\r\n      , height = $svg.clientHeight\r\n      , diff = max - min\r\n      , padding = opts.padding\r\n      , fill = this.fill()\r\n\r\n    var xScale = this.x = function(input) {\r\n      return input * width / values.length\r\n    }\r\n\r\n    var yScale = this.y = function(input) {\r\n      return height - (\r\n        diff\r\n          ? ((input - min) / diff) * height\r\n          : 1\r\n      )\r\n    }\r\n\r\n    for (var i = 0; i < values.length; i++) {\r\n      var x = xScale(i + padding)\r\n        , w = xScale(i + 1 - padding) - x\r\n        , value = values[i]\r\n        , valueY = yScale(value)\r\n        , y1 = valueY\r\n        , y2 = valueY\r\n        , h\r\n\r\n      if (!diff) {\r\n        h = 1\r\n      } else if (value < 0) {\r\n        y1 = yScale(Math.min(max, 0))\r\n      } else {\r\n        y2 = yScale(Math.max(min, 0))\r\n      }\r\n\r\n      h = y2 - y1\r\n\r\n      if (h == 0) {\r\n        h = 1\r\n        if (max > 0 && diff) y1--\r\n      }\r\n\r\n      $svg.append(\r\n        svgElement('rect', {\r\n          'data-value': value,\r\n          fill: fill.call(this, value, i, values),\r\n          x: x,\r\n          y: y1,\r\n          width: w,\r\n          height: h\r\n        })\r\n      )\r\n    }\r\n  }\r\n);\r\n\r\npeity.register(\r\n  \"line\",\r\n  {\r\n    delimiter: \",\",\r\n    fill: \"#c6d9fd\",\r\n    height: 16,\r\n    min: 0,\r\n    stroke: \"#4d89f9\",\r\n    strokeWidth: 1,\r\n    width: 32\r\n  },\r\n  function(opts) {\r\n    var values = this.values()\r\n    if (values.length == 1) values.push(values[0])\r\n    var max = Math.max.apply(Math, opts.max == undefined ? values : values.concat(opts.max))\r\n      , min = Math.min.apply(Math, opts.min == undefined ? values : values.concat(opts.min))\r\n\r\n    var $svg = this.prepare(opts.width, opts.height)\r\n      , strokeWidth = opts.strokeWidth\r\n      , width = $svg.clientWidth\r\n      , height = $svg.clientHeight - strokeWidth\r\n      , diff = max - min\r\n\r\n    var xScale = this.x = function(input) {\r\n      return input * (width / (values.length - 1))\r\n    }\r\n\r\n    var yScale = this.y = function(input) {\r\n      var y = height\r\n\r\n      if (diff) {\r\n        y -= ((input - min) / diff) * height\r\n      }\r\n\r\n      return y + strokeWidth / 2\r\n    }\r\n\r\n    var zero = yScale(Math.max(min, 0))\r\n      , coords = [0, zero]\r\n\r\n    for (var i = 0; i < values.length; i++) {\r\n      coords.push(\r\n        xScale(i),\r\n        yScale(values[i])\r\n      )\r\n    }\r\n\r\n    coords.push(width, zero)\r\n\r\n    if (opts.fill) {\r\n      $svg.append(\r\n        svgElement('polygon', {\r\n          fill: opts.fill,\r\n          points: coords.join(' ')\r\n        })\r\n      )\r\n    }\r\n\r\n    if (strokeWidth) {\r\n      $svg.append(\r\n        svgElement('polyline', {\r\n          fill: 'none',\r\n          points: coords.slice(2, coords.length - 2).join(' '),\r\n          stroke: opts.stroke,\r\n          'stroke-width': strokeWidth,\r\n          'stroke-linecap': 'square'\r\n        })\r\n      )\r\n    }\r\n  }\r\n);\r\n\r\n// rework?\r\nwindow.peity = peity;"],"sourceRoot":""}